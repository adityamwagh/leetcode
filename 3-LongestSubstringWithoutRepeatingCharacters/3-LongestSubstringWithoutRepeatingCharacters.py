class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        
        start = 0
        answer = -float("inf")
        
            while s[end] in hset:
                hset.remove(s[start])
        return answer
            hset.add(s[end])
            answer = max(answer, end - start + 1)
                start += 1
            # bring the start pointer to the index before the duplicate element
            
        for end in range(0, len(s)):
        hset = set()
            

"abcabcbb"
